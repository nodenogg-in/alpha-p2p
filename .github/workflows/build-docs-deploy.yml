name: Build Docs

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup Node.js environment
        uses: actions/setup-node@v2
        with:
          node-version: ">=18.14.1"

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install dependencies
        run: pnpm install

      - name: Install libraries
        run: pnpm build:lib

      - name: Move into docs folder
        run: cd docs

      - name: Debug - Check package.json
        run: |
          cd docs 
          cat package.json 
          cd ..

      - name: Install dependencies in docs folder
        run: |
          cd docs
          npm install --verbose
          cd ..

      - name: Debug - List contents of docs directory
        run: ls -l

      - name: Build
        run: npm run build

      - name: Move back to the root directory
        run: cd ..

      - name: Create destination directory
        run: mkdir -p $GITHUB_WORKSPACE/../${GITHUB_REPOSITORY}/docs/dist

      - name: Copy files to repo
        env:
          GIT_SSH_COMMAND: "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null"
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
        run: |
          # Debug: Print current directory and its contents
          echo "Current directory:"
          pwd
          echo "Contents of current directory:"
          ls -la

          # Debug: Check the docs directory
          echo "Contents of docs directory:"
          ls -la docs

          # Debug: Check if docs/dist exists and its contents
          if [ -d "docs/dist" ]; then
            echo "Contents of docs/dist directory:"
            ls -la docs/dist
          else
            echo "docs/dist directory does not exist"
          fi

          # Ensure we're in the root of the repository
          cd $GITHUB_WORKSPACE

          # Create docs/dist if it doesn't exist
          mkdir -p docs/dist

          # Copy the built files to the docs/dist directory in the repository
          # Only copy if there are files to copy
          if [ "$(ls -A docs/dist)" ]; then
            cp -R docs/dist/* docs/dist/
          else
            echo "Warning: docs/dist is empty, nothing to copy"
          fi

          # Configure Git
          git config --global user.email "actions@github.com"
          git config --global user.name "GitHub Actions"

          # Add, commit, and push changes
          git add docs/dist
          git status  # Debug: Check Git status
          git commit -m "fix: update to documentation" || echo "No changes to commit"
          git push origin HEAD:${GITHUB_REF#refs/heads/} --force-with-lease
  deploy:
    needs: build
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Deploy to azure / docs.nodenogg.in
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GENTLE_TREE_08C8E3A03 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          app_location: "docs/dist" # Updated app source code path
