name: PR Validation

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

env:
  NODE_ENV: development
  VITE_SYNC_SERVER_ENDPOINT: ws://localhost:8787/sync

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run linting
        run: pnpm lint

      - name: Run type checking
        run: pnpm --filter @* type-check

      - name: Run tests
        run: pnpm test

      - name: Build packages
        run: pnpm build

      - name: Comment PR with validation results
        if: always()
        uses: actions/github-script@v7
        with:
          script: |
            const { context } = github;
            const result = '${{ job.status }}';
            const emoji = result === 'success' ? '‚úÖ' : '‚ùå';
            
            const body = `## PR Validation ${emoji}
            
            **Status**: ${result === 'success' ? 'All checks passed!' : 'Some checks failed!'}
            
            **Checks performed**:
            - ${result === 'success' ? '‚úÖ' : '‚ùå'} Linting
            - ${result === 'success' ? '‚úÖ' : '‚ùå'} Type checking  
            - ${result === 'success' ? '‚úÖ' : '‚ùå'} Tests
            - ${result === 'success' ? '‚úÖ' : '‚ùå'} Build
            
            ${result === 'success' ? 
              'üöÄ This PR is ready for review and can be safely merged to trigger staging deployment.' : 
              '‚ö†Ô∏è Please fix the failing checks before requesting review.'}
            `;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: body
            });

  security-check:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Run security audit
        run: pnpm audit --audit-level moderate

      - name: Check for secrets in code
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          head: HEAD